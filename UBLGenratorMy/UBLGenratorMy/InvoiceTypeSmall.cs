// Generated by UblSharp.Tests.Generator
using System;
using System.Collections.Generic;
using System.Net.Http.Headers;
using System.Xml;
using UblSharp;
using UblSharp.CommonAggregateComponents;
using UblSharp.CommonExtensionComponents;
using UblSharp.UnqualifiedDataTypes;
using UblSharp.XmlDigitalSignature;

namespace UblSharp.Tests.Samples
{
    internal class SmallInvoiceTest
    {
        public static InvoiceType Create()
        {
            var doc = new InvoiceType
            {
                UBLVersionID = "2.1",
                ID = "12007011905",
                CustomizationID = "urn:cen.eu:en16931:2017#compliant#urn:fdc:peppol.eu:2017:poacc:billing:3.0",
                IssueDate = "2020-07-31", DueDate = "2020-09-07",
                InvoiceTypeCode = new CodeType
                {
                    Value = "380"
                },
                Note = new List<TextType>()
                {
                    new TextType
                    {
                        languageID = "en",
                        Value = "Ordered in our booth at the convention."
                    }
                },
                TaxPointDate = "2009-11-30",
                DocumentCurrencyCode = new CodeType
                {
                    Value = "SEK"
                },
                BuyerReference = "Ref?",
                InvoicePeriod = new List<PeriodType>()
                {
                    new PeriodType
                    {
                        StartDate = "2020-07-01",
                        EndDate = "2020-07-31"
                    }
                },
                OrderReference = new OrderReferenceType
                {
                    ID = "123"
                },
                ContractDocumentReference = new List<DocumentReferenceType>()
                {
                    new DocumentReferenceType
                    {
                        ID = "Contract321",
                        DocumentType = "Framework agreement"
                    }
                },
                AdditionalDocumentReference = new List<DocumentReferenceType>()
                {
                     new  DocumentReferenceType()
                     { 
                         ID = "12007011905 PEPPOL BIS 3_0_ProductGroup",
                          Attachment = new AttachmentType()
                          { 
                              ExternalReference = new ExternalReferenceType()
                              {
                                   FileName = "12007011905 PEPPOL BIS 3_0_ProductGroup.xml"
                              }
                          
                          }
                     },
                      new  DocumentReferenceType()
                     {
                         ID = "12007011905 PEPPOL BIS 3_0_VATSpecification",
                          Attachment = new AttachmentType()
                          {
                              ExternalReference = new ExternalReferenceType()
                              {
                                   FileName = "12007011905 PEPPOL BIS 3_0_VATSpecification.xml"
                              }

                          }
                     },
                      new  DocumentReferenceType()
                     {
                         ID = "12007011905 PEPPOL BIS 3_0_Footer",
                         Attachment = new AttachmentType()
                          {
                              ExternalReference = new ExternalReferenceType()
                              {
                                   FileName = "12007011905 PEPPOL BIS 3_0_Footer.xml"
                              }

                          }
                     }
                }
                ,
                AccountingSupplierParty = new SupplierPartyType()
                {
                    Party = new PartyType()
                    {
                        EndpointID = new IdentifierType() { schemeID = "0007" , Value = "5560273244" }
                        ,PartyIdentification = new List<PartyIdentificationType>()
                        {
                            new PartyIdentificationType()
                            {
                               ID = "5560273244"
                            }
                        }
                        ,PostalAddress = new AddressType()
                        {
                            StreetName = "Gata 1",
                            CityName = "Stockholm",
                            PostalZone = "11111",
                            Country = new CountryType() { IdentificationCode = "SE" }
                        }
                        ,PartyTaxScheme = new List<PartyTaxSchemeType>()
                        {
                           new PartyTaxSchemeType()
                           {
                               CompanyID = "SE556027324401",
                               TaxScheme = new TaxSchemeType()
                               {
                                   ID = "VAT"
                               }
                           },
                           new PartyTaxSchemeType()
                           {
                               CompanyID = "Godkänd för F-skatt",
                               TaxScheme = new TaxSchemeType()
                               {
                                   ID = "TAX"
                               }
                           }
                        }
                        ,PartyLegalEntity = new List<PartyLegalEntityType>()
                        {
                            new PartyLegalEntityType()
                            {
                                RegistrationName = "OK-Q8 AB",
                                CompanyID = new IdentifierType(){schemeID = "0007", Value = "5560273244"  },
                                CompanyLegalForm = "Säte: Stockholm"

                            }
                        }
                        ,Contact = new ContactType() { Name = "Kontakt Namn", Telephone = "0123456789", ElectronicMail = "okq8@okq8.se" }
                    },
                    
                }
                ,
                AccountingCustomerParty = new CustomerPartyType()
                {
                    Party = new PartyType()
                    {
                        EndpointID = new IdentifierType() { schemeID = "0007", Value = "1002003004" }
                        ,PartyIdentification = new List<PartyIdentificationType>()
                        {
                            new PartyIdentificationType(){ID = "1002003004"}
                        }
                        ,PostalAddress = new AddressType()
                        { 
                            StreetName = "Omvägen 8",
                            CityName = "Stockholm",
                            PostalZone = "13579",
                            Country = new CountryType() { IdentificationCode = "SE" }
                        }
                        ,PartyLegalEntity =  new List<PartyLegalEntityType>()
                        {
                            new PartyLegalEntityType()
                            {
                               RegistrationName = "JAN XXXX",
                               CompanyID = new IdentifierType(){ schemeID = "0007", Value = "XXXXXXX123"}
                            }
                        }

                    }
                }
                ,
                //PayeeParty = new PartyType(),
                Delivery = new List<DeliveryType>()
                {
                    new DeliveryType
                    {
                        ActualDeliveryDate = "2009-12-15",
                        DeliveryLocation = new LocationType
                        {
                            ID = new IdentifierType
                            {
                                schemeID = "GLN",
                                schemeAgencyID = "9",
                                Value = "6754238987648"
                            },
                            Address = new AddressType
                            {
                                StreetName = "Deliverystreet",
                                AdditionalStreetName = "Side door",
                                BuildingNumber = "12",
                                CityName = "DeliveryCity",
                                PostalZone = "523427",
                                CountrySubentity = "RegionC",
                                Country = new CountryType
                                {
                                    IdentificationCode = "BE"
                                }
                            }
                        }
                    }
                },
              
                PaymentMeans = new List<PaymentMeansType>()
                {
                    new PaymentMeansType
                    {
                        PaymentMeansCode = new CodeType
                        {
                            Value = "30"
                        },
                        //PaymentDueDate = "2009-12-31",
                        //PaymentChannelCode = "IBAN",
                        PaymentID = new List<IdentifierType>()
                        {
                            new IdentifierType
                            {
                                Value = "1200701190535"
                            }
                        },
                        PayeeFinancialAccount = new FinancialAccountType
                        {
                            ID = "45678",
                            FinancialInstitutionBranch = new BranchType
                            {
                                FinancialInstitution = new FinancialInstitutionType
                                {
                                    ID = "SE:PLUSGIRO"
                                }
                            }
                        }
                    },
                      new PaymentMeansType
                     {
                        PaymentMeansCode = new CodeType
                        {
                            Value = "30"
                        },
                        //PaymentDueDate = "2009-12-31",
                        //PaymentChannelCode = "IBAN",
                        PaymentID = new List<IdentifierType>()
                        {
                            new IdentifierType
                            {
                                Value = "1200701190535"
                            }
                        },
                        PayeeFinancialAccount = new FinancialAccountType
                        {
                            ID = "12345678",
                            FinancialInstitutionBranch = new BranchType
                            {
                                FinancialInstitution = new FinancialInstitutionType
                                {
                                    ID = "SE:BANKGIRO"
                                }
                            }
                        }
                    }
                },
                PaymentTerms = new List<PaymentTermsType>()
                {
                    new PaymentTermsType()
                    {
                        Note = new List<TextType>()
                        {
                            new TextType() { Value = "Vid betalning via Internet skall OCR-nr/referensnr 1200701190535 anges,Dröjsmålsränta utgår enligt STIBOR tre månader + 8,0 %"}
                        }
                    }
                }
                ,
                AllowanceCharge = new List<AllowanceChargeType>(),
                TaxTotal = new List<TaxTotalType>()
                {
                    new TaxTotalType
                    {
                        TaxAmount = new AmountType
                        {
                            currencyID = "SEK",
                            Value = 12.13M
                        },
                        TaxSubtotal = new List<TaxSubtotalType>()
                        {
                            new TaxSubtotalType
                            {
                                TaxableAmount = new AmountType
                                {
                                    currencyID = "SEK",
                                    Value = 48.50M
                                },
                                TaxAmount = new AmountType
                                {
                                    currencyID = "SEK",
                                    Value = 12.13M
                                },
                                TaxCategory = new TaxCategoryType
                                {
                                    ID = new IdentifierType
                                    {
                                        Value = "S"
                                    },
                                    Percent = 25M,
                                    TaxScheme = new TaxSchemeType
                                    {
                                        ID = new IdentifierType
                                        {
                                            Value = "VAT"
                                        }
                                    }
                                }
                            }
                        },
                    }
                },
                LegalMonetaryTotal = new MonetaryTotalType()
                {
                    LineExtensionAmount = new AmountType { currencyID = "SEK", Value = 48.50M },
                    TaxExclusiveAmount  = new AmountType { currencyID = "SEK", Value = 48.50M },
                    TaxInclusiveAmount  = new AmountType { currencyID = "SEK", Value = 60.62M },
                         PayableAmount  = new AmountType { currencyID = "SEK", Value = 61.00M }
                }
                ,
                InvoiceLine = new List<InvoiceLineType>()
                {
                    new InvoiceLineType
                    {
                        ID = "1",
                        Note = new List<TextType>()
                        {
                            new TextType
                            {
                                Value = "Tid: 2020-07-23 13:43, Förs ställe: XXXXXXXX AUTOMAT"
                            }
                        },
                        InvoicedQuantity = new QuantityType
                        {
                            unitCode = "LTR",
                            Value = 4.37M
                        },
                        LineExtensionAmount = new AmountType
                        {
                            currencyID = "SEK",
                            Value = 48.50M
                        },
                        //AccountingCost = "BookingCode001",
                        //OrderLineReference = new List<OrderLineReferenceType>()
                        //{
                        //    new OrderLineReferenceType
                        //    {
                        //        LineID = "1"
                        //    }
                        //},
                        AllowanceCharge = new List<AllowanceChargeType>()
                        {
                            new AllowanceChargeType
                            {
                                ChargeIndicator = false, 
                                AllowanceChargeReasonCode = new CodeType{ Value = "95" },
                                AllowanceChargeReason = new List<TextType>()
                                {
                                    new TextType
                                    {
                                        Value = "Discount"
                                    }
                                },
                                Amount = new AmountType
                                {
                                    currencyID = "SEK",
                                    Value = 1.13M
                                }
                            }
                        }
                        //TaxTotal = new List<TaxTotalType>()
                        //{
                        //    new TaxTotalType
                        //    {
                        //        TaxAmount = new AmountType
                        //        {
                        //            currencyID = "EUR",
                        //            Value = 254.6M
                        //        }
                        //    }
                        //}
                        ,
                        Item = new ItemType
                        {
                            Description = new List<TextType>()
                            {
                                new TextType
                                {
                                    languageID = "SEK",
                                    Value = @"95 GOEASY"
                                }
                            },
                            Name = "95 GOEASY",
                            //SellersItemIdentification = new ItemIdentificationType
                            //{
                            //    ID = "JB007"
                            //},
                            //StandardItemIdentification = new ItemIdentificationType
                            //{
                            //    ID = new IdentifierType
                            //    {
                            //        schemeID = "GTIN",
                            //        schemeAgencyID = "9",
                            //        Value = "1234567890124"
                            //    }
                            //},
                            //CommodityClassification = new List<CommodityClassificationType>()
                            //{
                            //    new CommodityClassificationType
                            //    {
                            //        ItemClassificationCode = new CodeType
                            //        {
                            //            listAgencyID = "113",
                            //            listID = "UNSPSC",
                            //            Value = "12344321"
                            //        }
                            //    },
                            //    new CommodityClassificationType
                            //    {
                            //        ItemClassificationCode = new CodeType
                            //        {
                            //            listAgencyID = "2",
                            //            listID = "CPV",
                            //            Value = "65434568"
                            //        }
                            //    }
                            //},
                            ClassifiedTaxCategory = new List<TaxCategoryType>()
                            {
                                new TaxCategoryType
                                {
                                    ID = new IdentifierType
                                    {
                                       Value = "E"
                                    },
                                    Percent = 25M,
                                    TaxScheme = new TaxSchemeType
                                    {
                                        ID = new IdentifierType
                                        {
                                            Value = "VAT"
                                        }
                                    }
                                }
                            },
                            AdditionalItemProperty = new List<ItemPropertyType>()
                            {
                                new ItemPropertyType
                                {
                                    Name = "KORT",
                                    Value = "0014"
                                }
                            },
                        },
                        Price = new PriceType
                        {
                            PriceAmount = new AmountType
                            {
                                currencyID = "SEK",
                                Value = 14.13M
                            },
                            BaseQuantity = new QuantityType
                            {
                                unitCode = "C62",
                                Value = 4.37M
                            }
                            //AllowanceCharge = new List<AllowanceChargeType>()
                            //{
                            //    new AllowanceChargeType
                            //    {
                            //        ChargeIndicator = false,
                            //        AllowanceChargeReason = new List<TextType>()
                            //        {
                            //            new TextType
                            //            {
                            //                Value = "Contract"
                            //            }
                            //        },
                            //        MultiplierFactorNumeric = 0.15M,
                            //        Amount = new AmountType
                            //        {
                            //            currencyID = "EUR",
                            //            Value = 225M
                            //        },
                            //        BaseAmount = new AmountType
                            //        {
                            //            currencyID = "EUR",
                            //            Value = 1500M
                            //        }
                            //    }
                            //},
                             
                        }
                        ,ItemPriceExtension = new PriceExtensionType()
                        {
                            Amount = new AmountType() { currencyID = "SEK", Value =12.12M },
                            TaxTotal = new List<TaxTotalType>()
                            {
                                new TaxTotalType()
                                {
                                     TaxAmount = new AmountType(){ currencyID = "SEK", Value = 12.12M}
                                    ,RoundingAmount = new AmountType(){ currencyID = "SEK", Value = 12.12M }
                                    ,TaxEvidenceIndicator = new IndicatorType(){ Value = true}
                                    ,TaxIncludedIndicator = new IndicatorType(){ Value = true}
                                }
                            }

                        }
                    }
                },
            };

            doc.Xmlns = new System.Xml.Serialization.XmlSerializerNamespaces(new[]
            {
                 new XmlQualifiedName("","urn:oasis:names:specification:ubl:schema:xsd:Invoice-2"),
                 new XmlQualifiedName("cac","urn:oasis:names:specification:ubl:schema:xsd:CommonAggregateComponents-2"),
                 new XmlQualifiedName("cbc","urn:oasis:names:specification:ubl:schema:xsd:CommonBasicComponents-2"),
                 new XmlQualifiedName("ext","urn:oasis:names:specification:ubl:schema:xsd:CommonExtensionComponents-2"),
                 new XmlQualifiedName("udt","urn:oasis:names:specification:ubl:schema:xsd:UnqualifiedDataTypes-2"),
                 new XmlQualifiedName("sbc","urn:oasis:names:specification:ubl:schema:xsd:SignatureBasicComponents-2"),
            });

            return doc;
        }
    }
}
